/* Margin is space around element's border (control's space around element's border), while padding is space BETWEEN element's border and element's content (INSIDE element - makes it take up more space)
font-family is group of fonts that share the same design
"display: flex" is layout model (default: row) that allows arrangment of items inside container flexibily and responsively - when applied to a container element (e.g. div) the flex items, container element's children, are adjusted dynamically to fit within container space  
justify-content property controls alignment of main axis of flex items 
align-items property controls alignment of the cross axis (perpendicular to main axis)
height property - 100vh means min. height of element should be 100% of viewport height*/

html {
    font-size: 100%;
    /* 100% is the default font size, which is equivalent to 16px */
}

body {
    margin:0;
    font-family: 'Inter', sans-serif;
   /*Inter is the preferred font, sans-serif is the generic fallback font (if Inter doesn't load)*/
    display: flex; /*turns HTML element into flexbox container*/
    flex-direction: column; /*sets the direction of the flex container's MAIN AXIS (default is row)*/
    justify-content: center; /*tells flex container to lay child elements vertically because flex direction is column*/
    align-items: center; /*aligns all child elements along CROSS AXIS, which is horizontal in this case*/
    min-height: 100vh; /*vh = viewport height   number in front is the % of*/
    padding: 1rem; /*equals font size of html element*/
    box-sizing: border-box; /*controls how browser calculates element size when viewport is changed (border box includes content + padding + layout)- responsive design*/
    overflow-x: hidden; /*prevents horizontal scroll on small screens*/
}

  /* Animated background element */
  body::before { /*pseudo element - for full-screen BACKGROUND ANIMATION without interfering with rest of page content*/
    content: "";
    position: fixed;  /* fixed to viewport (even for when user scrolls) */
    top: 0; left: 0; right: 0; bottom: 0;
    z-index: -1;  /* behind everything else on page*/
    background: linear-gradient(270deg, #a316e4, #4b42c4, #13da7d, #3f51b5); /*horizontal gradient with four colors - 270deg means gradient goes left to right*/
    background-size: 800%; /*makes gradient larger than element/screen (more unique parts of background slide across viewport creating smoother transition)*/
    animation: gradientShift 20s ease infinite; /*calls created animation called gradientShift, runs over 20 seconds, eases smoothly, loops infinitely*/
  }

  @keyframes gradientShift {
    0% /*point in time*/ {background-position: 0% 50%;} /*first number is width (far left of background), second number is height (centered vertically)*/
    50% {background-position: 100% 50%;}
    100% {background-position: 0% 50%;}
  } 

  .container {
    text-align: center;
    background-color:rgb(255, 255, 255);
    width: 90%; /*setting width prevents an element from stretching to fill the entire width of its parent container
    however, if viewport is smaller than width (for usage on smaller browser windows),max-width is needed*/
    max-width: 700px;
    padding: 1.5vw; /*vw means viewport width, the number in front is the percentage of the width of the viewport - responsive design*/
    height: auto; /*container will grow/shrink automatically based on its content*/
    border-radius: 20px;
    /*rounds the corners*/
    box-shadow: 15px 40px 20px rgba(0, 0, 0, 0.333);
    /*adds shadow effects around frame - horizontal offset (right), vertical offset (down), blur radius (shadow strength)*/
    overflow-x: auto; /*if content inside container exceeds container size then a scrollbar may appear (only if necessary)*/
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    box-sizing: border-box; /*controls how browser calculates element size (border box height and width includes content + padding + layout)- makes layout more preditable and easier to control. It will shrink the content area as needed to fit padding and border inside and kep the total width and height fixed at what you set*/
}

.logo {
    width: 20vw; 
    max-width: 150px;
    height: auto; /*preserves images aspect ratio (prevent distortion)*/
    margin: 0rem auto 1rem auto; /*margin of picture: top right bottom left. Auto in this case tells browser to automatically caluclate the margin to center the element horizontally*/
}

.brandname {
    font-size: clamp(2rem, 5vw, 4rem); /*(never smaller than - fixed value, ideally - relative value, never larger than - fixed value)*/
    font-weight: bold;
    color: #3f51b5;
    margin-bottom: 0.5rem
}

.subtext {
  color: #3f51b5;;
  font-size: clamp(1rem, 2vw ,4rem);
}

/*the container*/
.button-layout {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
}

.button {
    flex:1 1 0;
    /*flex: 1 is a shorthand property used in flexbox layout to specify how much space an item should take up relative to its sibling. 1 means each item will take up equal fraction of 100% of the space - responsive design (don't need to specify width, automatically adjusts to available space). The third number refers to flex-basis: initial main size of flex item before any growing or shrinking happens (starts at 0, flex grow or flex shrink deices who size proportionally)*/
    padding: 1.5rem;
    min-width: 120px;
    max-width: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: clamp(1rem, 3vw, 2.75rem);
    font-weight: bold;
    border-radius: 8px; /*rounds the corners*/
    cursor: pointer;
    /*removes default underline browsers use to apply <a>*/
    text-decoration: none;
    /*transition property allows smooth change of an element's property (e.g. transform) over a specified duration (0.1s) with an easing function (ease)*/
    transition: transform 0.1s ease;
}

.sign-in{
    /*background of the element*/
    background-color: #201899;
    /*color of text inside element*/
    color: rgb(255, 255, 255);
    border: 1px solid #929292;
}


.sign-out {
    /*background of the element*/
    background-color: #ebdddd;
    /*color of text inside element*/
    color: rgb(0, 0, 0);
    border: 1px solid #929292;
}

/*pressing the button changes its size*/
.button:active {
  transform: scale(0.9);
}

.divider-line {
    width: clamp(200px, 75%, 600px); /* More responsive to narrow and wide viewports */
    height: 2px;
    background-color: rgba(123, 122, 124, 0.651); /* Subtle neutral tone that adapts better with themes */
    margin: 1rem auto 1.5rem;
    border: none;
}

.nowrap {
    white-space: nowrap; /*prevents line wrapping*/
}

.reminder {
    margin-top: 1.5rem;
    font-size: clamp(0.9rem, 2vw, 1.25rem);
    color: #333;
    text-align: center;
    max-width: 90%;
    margin-left: auto;
    margin-right: auto;
    padding: 0 1rem;
    line-height: 1.4;
    font-weight: 500;
}
